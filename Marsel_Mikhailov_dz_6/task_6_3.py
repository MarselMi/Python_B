'''Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом — данные об их хобби.
Известно, что при хранении данных используется принцип: одна строка — один пользователь,
разделитель между значениями — запятая. Написать код, загружающий данные из обоих файлов
и формирующий из них словарь: ключи — ФИО, значения — данные о хобби. Сохранить словарь в файл.
Проверить сохранённые данные. Если в файле, хранящем данные о хобби, меньше записей, чем в файле с ФИО,
задаём в словаре значение None. Если наоборот — выходим из скрипта с кодом «1». При решении задачи считать,
что объём данных в файлах во много раз меньше объема ОЗУ.
Фрагмент файла с данными о пользователях (users.csv):
Иванов,Иван,Иванович
Петров,Петр,Петрович
Фрагмент файла с данными о хобби (hobby.csv):
скалолазание,охота
горные лыжи '''

users = ['Иванов,Иван,Иванович', 'Петров,Петр,Петрович', 'Михайлов,Михал,Михайлович',
         'Сергеев,Сергей,Сергеевич', 'Александров,Александр,Александрович', 'Максимов,Максим,Максимович']
hobbyes = ['скалолазание,охота', 'горные лыжи', 'спортивная ходьба,бег', 'чтение книг,боулинг',
           'спортивная стрельба,ныряние с аквалангом', 'азартные игры,программирование']
users_out = []
hobbyes_out = []

'''Записываю списки в файл, согласно условиям задания'''
with open('users.csv', 'w', encoding='utf-8') as fw:
    for user in users:
        fw.write(f'{user}\n')
with open('hobby.csv', 'w', encoding='utf-8') as fw:
    for hobby in hobbyes:
        fw.write(f'{hobby}\n')

'''Считываю списки с файла, согласно условиям задания'''
with open('users.csv', 'r', encoding='utf-8') as fr:
    for row in fr.readlines():
        users_out.append(row.replace(',', ' ').strip())
with open('hobby.csv', 'r', encoding='utf-8') as fr:
    for row in fr.readlines():
        hobbyes_out.append(row.replace(',', ', ').strip())


def dict_create(list_1: list, list_2: list) -> dict:
    '''Функция для создания словаря с полученных списков'''
    if len(list_1) < len(list_2):
        return '1'
    elif len(list_1) > len(list_2):
        list_2.append(None)
    return dict(zip(list_1, list_2))


print(f' len(users) = {len(users_out)}, len(hobbyes)={len(hobbyes_out)}')
print(dict_create(users_out, hobbyes_out))